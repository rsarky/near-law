{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/fetch-records.service.ts","./src/app/record/record.component.css","./src/app/record/record.component.html","./src/app/record/record.component.ts","./src/app/update-record.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<form #citForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n  <label for=\\\"citation\\\">Enter the citation</label>\\n  <input type=\\\"text\\\" id=\\\"citation\\\" name=\\\"citation\\\" required [(ngModel)]=\\\"citation\\\">\\n  <input type=\\\"submit\\\">\\n</form>\\n<div *ngIf=\\\"record\\\">\\n  <app-record [record]=\\\"record\\\"></app-record>\\n</div>\\n<div *ngIf=\\\"noRecord\\\">\\n  <h2>No record found</h2>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs/Observable'\nimport { FetchRecordsService } from './fetch-records.service';\nimport { Record } from './record'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  private citation:string = '2008 ALL SCR 241'\n  private record:any\n  private noRecord:boolean=false\n  constructor(private fetchRecords:FetchRecordsService) {\n\n  }\n  onSubmit() {\n    this.fetchRecords.getRecord(this.citation).map((res:Response) => res).\n      subscribe((record) => {\n        this.record=record\n        if(!this.record) this.noRecord = true\n        console.log(this.record)\n      })\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http'\nimport { FetchRecordsService } from './fetch-records.service'\nimport { UpdateRecordService } from './update-record.service'\nimport { FormsModule } from '@angular/forms'\n\nimport { AppComponent } from './app.component';\nimport { RecordComponent } from './record/record.component'\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RecordComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [\n    FetchRecordsService,\n    UpdateRecordService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport 'rxjs/add/operator/map'\n\n@Injectable()\nexport class FetchRecordsService {\n  Url:string = 'http://localhost:3000/api/'\n  constructor(private http:HttpClient) { }\n  getRecord(citation:string) {\n    citation = encodeURIComponent(citation.trim())\n    return this.http.get(this.Url+citation)\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/fetch-records.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/record/record.component.css\n// module id = ./src/app/record/record.component.css\n// module chunks = main","module.exports = \"<h1>Record Found</h1>\\n<button (click)=\\\"toggle()\\\">Toggle Details</button>\\n<button (click)=\\\"Edit()\\\">Edit</button>\\n<div *ngIf=\\\"showDetails\\\">\\n<h2>Tribunal</h2>\\n<hr>\\n<p>{{record.tribunal}}</p>\\n<h2>Judge Name</h2>\\n<hr>\\n<p>{{record.Judge_name}}</p>\\n<h2>Cited No</h2>\\n<hr>\\n<p>{{record.citedNo}}</p>\\n<h2>Cases Cited</h2>\\n<hr>\\n<p>{{record.cases_cited}}</p>\\n<h2>Citation</h2>\\n<hr>\\n<p>{{record.Citation}}</p>\\n<h2>Case No</h2>\\n<hr>\\n<p>{{record.Case_No}}</p>\\n<h2>Adv Respondent</h2>\\n<hr>\\n<p>{{record.Adv_respondent}}</p>\\n<h2>Petitioner</h2>\\n<hr>\\n<p>{{record.Petitioner}}</p>\\n<h2>Judgement</h2>\\n<hr>\\n<p>{{record.judgement}}</p>\\n<h2>Date</h2>\\n<hr>\\n<p>{{record.Date}}</p>\\n<h2>Respondent</h2>\\n<hr>\\n<p>{{record.Respondent}}</p>\\n<h2>File URL</h2>\\n<hr>\\n<p>{{record.fileurl}}</p>\\n<h2>HeadNote Keywords</h2>\\n<hr>\\n<p>{{record.HeadNote_keywords}}</p>\\n<h2>Decision</h2>\\n<hr>\\n<p>{{record.decision}}</p>\\n<h2>Adv Petitioner</h2>\\n<hr>\\n<p>{{record.Adv_petitioner}}</p>\\n</div>\\n<div *ngIf=\\\"edit\\\">\\n  <br><br>\\n  <h2>Form</h2>\\n  <hr>\\n  <h3> All fields must turn green for form to be submitted.</h3>\\n  <form (ngSubmit)=\\\"onSubmit()\\\" #recordForm=\\\"ngForm\\\">\\n    <label for=\\\"tribunal\\\">Tribunal</label>\\n    <input type=\\\"text\\\" name=\\\"tribunal\\\" id=\\\"tribunal\\\" [(ngModel)]=\\\"updatedRecord.tribunal\\\" required>\\n    <br><br>\\n    <label for=\\\"Judge_name\\\">Judge Name</label>\\n    <input type=\\\"text\\\" name=\\\"Judge_name\\\" id=\\\"Judge_name\\\" [(ngModel)]=\\\"updatedRecord.Judge_name\\\" required>\\n    <br><br>\\n    <label for=\\\"Court\\\">Court</label>\\n    <input type=\\\"text\\\" name=\\\"Court\\\" id=\\\"Court\\\" [(ngModel)]=\\\"updatedRecord.Court\\\" required>\\n    <br><br>\\n    <label for=\\\"citedNo\\\">Cited No</label>\\n    <input type=\\\"number\\\" name=\\\"citedNo\\\" id=\\\"citedNo\\\" [(ngModel)]=\\\"updatedRecord.citedNo\\\" required>\\n    <br><br>\\n    <label for=\\\"cases_cited\\\">Cases Cited</label>\\n    <input type=\\\"text\\\" name=\\\"cases_cited\\\" id=\\\"cases_cited\\\" [(ngModel)]=\\\"updatedRecord.cases_cited\\\" required>\\n    <br><br>\\n    <label for=\\\"Citation\\\">Citation</label>\\n    <input type=\\\"text\\\" name=\\\"Citation\\\" id=\\\"Citation\\\" [(ngModel)]=\\\"updatedRecord.Citation\\\" readonly>\\n    <br><br>\\n    <label for=\\\"Case_No\\\">Case No</label>\\n    <input type=\\\"text\\\" name=\\\"Case_No\\\" id=\\\"Case_No\\\" [(ngModel)]=\\\"updatedRecord.Case_No\\\" required>\\n    <br><br>\\n    <label for=\\\"Adv_respondent\\\">Adv Respondent</label>\\n    <input type=\\\"text\\\" name=\\\"Adv_respondent\\\" id=\\\"Adv_respondent\\\" [(ngModel)]=\\\"updatedRecord.Adv_respondent\\\" required>\\n    <br><br>\\n    <label for=\\\"Petitioner\\\">Petitioner</label>\\n    <input type=\\\"text\\\" name=\\\"Petitioner\\\" id=\\\"Petitioner\\\" [(ngModel)]=\\\"updatedRecord.Petitioner\\\" required>\\n    <br><br>\\n    <label for=\\\"judgment\\\">Judgement</label>\\n    <input type=\\\"text\\\" name=\\\"judgment\\\" id=\\\"judgment\\\" [(ngModel)]=\\\"updatedRecord.judgement\\\" required>\\n    <br><br>\\n    <label for=\\\"Date\\\">Date</label>\\n    <input type=\\\"text\\\" name=\\\"Date\\\" id=\\\"Date\\\" [(ngModel)]=\\\"updatedRecord.Date\\\" required>\\n    <br><br>\\n    <label for=\\\"Respondent\\\">Respondent</label>\\n    <input type=\\\"text\\\" name=\\\"Respondent\\\" id=\\\"Respondent\\\" [(ngModel)]=\\\"updatedRecord.Respondent\\\" required>\\n    <br><br>\\n    <label for=\\\"fileurl\\\">File Url</label>\\n    <input type=\\\"text\\\" name=\\\"fileurl\\\" id=\\\"fileurl\\\" [(ngModel)]=\\\"updatedRecord.fileurl\\\" required>\\n    <br><br>\\n    <label for=\\\"HeadNote_keywords\\\">Headnote Keywords</label>\\n    <input type=\\\"text\\\" name=\\\"HeadNote_keywords\\\" id=\\\"HeadNote_keywords\\\" [(ngModel)]=\\\"updatedRecord.HeadNote_keywords\\\" required>\\n    <br><br>\\n    <label for=\\\"decision\\\">Decision</label>\\n    <input type=\\\"text\\\" name=\\\"decision\\\" id=\\\"decision\\\" [(ngModel)]=\\\"updatedRecord.decision\\\" required>\\n    <br><br>\\n    <label for=\\\"Adv_petitioner\\\">Adv Petitioner</label>\\n    <input type=\\\"text\\\" name=\\\"Adv_petitioner\\\" id=\\\"Adv_petitioner\\\" [(ngModel)]=\\\"updatedRecord.Adv_petitioner\\\" required>\\n    <br><br>\\n    <input type=\\\"submit\\\" name=\\\"submit\\\" [disabled]=\\\"!recordForm.form.valid\\\">\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/record/record.component.html\n// module id = ./src/app/record/record.component.html\n// module chunks = main","import { Component, Input , OnInit } from '@angular/core';\nimport { Record } from '../record';\nimport { Observable } from 'rxjs/Observable'\nimport { UpdateRecordService } from '../update-record.service'\n\n@Component({\n  selector: 'app-record',\n  templateUrl: './record.component.html',\n  styleUrls: ['./record.component.css']\n})\nexport class RecordComponent implements OnInit {\n\n  private showDetails:boolean = false\n  private edit:boolean = false\n  @Input() record:any\n  private updatedRecord:Record\n  constructor(private updateRecord:UpdateRecordService) {\n  }\n  ngOnInit() {\n    this.updatedRecord = this.record\n  }\n  toggle() {\n    this.showDetails = !this.showDetails\n    this.edit=false\n  }\n  Edit() {\n    this.showDetails = false\n    this.edit = true\n\n  }\n  onSubmit() {\n    this.edit = false\n    console.log(this.updatedRecord)\n    this.updateRecord.update(this.updatedRecord).map(data => data).subscribe(record => {\n      this.record = record\n      this.showDetails = true\n    })\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/record/record.component.ts","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { HttpHeaders } from '@angular/common/http'\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  })\n}\n@Injectable()\nexport class UpdateRecordService {\n  Url:string = 'http://localhost:3000/api/'\n  constructor(private http:HttpClient) { }\n\n  update(record:any) {\n    this.Url = this.Url + encodeURIComponent(record.Citation.trim())\n    return this.http.put(this.Url, record, httpOptions)\n  } \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/update-record.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}